name: Production Deployment (Manual)

# ================== 触发配置 ==================
on:
  workflow_dispatch:
    inputs:
      environment:
        description: '部署环境 (prod/stage)'
        required: true
        default: 'stage'
        type: choice
        options:
          - prod
          - stage
      image_tag:
        description: '镜像标签 (默认: latest)'
        required: false
        default: 'latest'
        type: string

# ================== 权限配置 ==================
permissions:
  contents: read
  deployments: write
  actions: read
  packages: read

# ================== 全局环境变量 ==================
env:
  KUBECONFIG: ${{ secrets.KUBECONFIG_CONTENT }}
  REGISTRY_URL: ghcr.io/${{ github.repository }}

# ================== 执行任务 ==================
jobs:
  validate-inputs:
    name: Validate Inputs
    runs-on: ubuntu-22.04
    steps:
      - name: Check Environment
        run: |
          if [ "${{ inputs.environment }}" != "prod" ] && [ "${{ inputs.environment }}" != "stage" ]; then
            echo "::error::Invalid environment: ${{ inputs.environment }}"
            exit 1
          fi

  deploy-infra:
    name: Deploy to Cluster
    needs: validate-inputs
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code (Full)
        uses: actions/checkout@v4  # [!code focus]
        with:
          fetch-depth: 0
          sparse-checkout: |
            k8s/
            .github/

      - name: Setup Kubernetes Context
        uses: azure/k8s-set-context@v3  # [!code focus]
        with:
          method: kubeconfig
          kubeconfig: ${{ env.KUBECONFIG }}
          context: ${{ inputs.environment }}-cluster

      - name: Verify Manifests
        run: |
          echo "工作区路径: ${{ github.workspace }}"
          ls -R ${{ github.workspace }}/k8s/${{ inputs.environment }}

      - name: Kubernetes Deployment
        uses: azure/k8s-deploy@v4  # [!code focus]
        with:
          action: deploy
          manifests: |
            ${{ github.workspace }}/k8s/${{ inputs.environment }}/deployment.yaml
            ${{ github.workspace }}/k8s/${{ inputs.environment }}/service.yaml
          images: |
            ${{ env.REGISTRY_URL }}:${{ inputs.image_tag }}
          imagepullsecrets: |
            regcred
          strategy: rolling
          force: false

      - name: Post-deployment Check
        run: |
          kubectl get pods -n ${{ inputs.environment }}
          kubectl rollout status deployment/myapp -n ${{ inputs.environment }}
