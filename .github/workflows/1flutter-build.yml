name: Flutter Build & Deploy (v4)

on:
  workflow_dispatch:  # 手动触发
    inputs:
      environment:
        description: 'Environment (stage/prod)'
        required: true
        default: 'stage'
        type: choice
        options: [stage, prod]
      confirm:
        description: 'Confirm deployment'
        required: true
        default: true
        type: boolean
  push:
    branches: [main]
    paths: ['flutter/pubspec.yaml']  # 监听子目录文件

env:
  FLUTTER_DIR: './flutter'  # 关键路径定义
  REGISTRY: ghcr.io/yourname/project
  TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'stage' }}
    permissions:
      contents: read
      packages: write

    steps:
    # --- 代码检出 ---
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: ${{ env.FLUTTER_DIR }}  # 强制指定检出到子目录

    # --- Flutter 配置 ---
    - name: Disable analytics
      run: flutter config --no-analytics  # 关闭分析数据收集

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.19.5
        working-directory: ${{ env.FLUTTER_DIR }}  # 关键配置

    # --- 构建步骤 ---
    - name: Build Flutter
      working-directory: ${{ env.FLUTTER_DIR }}  # 必须指定
      run: |
        flutter pub get
        flutter build apk --release

    # --- 调试路径 ---
    - name: Verify paths
      run: |
        echo "当前目录: $PWD"
        ls -la ${{ env.FLUTTER_DIR }}

    # --- Docker 构建 ---
    - name: Build & Push Docker
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.FLUTTER_DIR }}  # 上下文指向 Flutter 目录
        push: true
        tags: ${{ env.REGISTRY }}:${{ env.TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # --- 部署步骤 ---
    - name: Deploy to Kubernetes
      if: ${{ inputs.confirm }}
      uses: azure/k8s-deploy@v4
      with:
        manifests: |
          ${{ env.FLUTTER_DIR }}/k8s/deployment.yaml  # 适配子目录结构
          ${{ env.FLUTTER_DIR }}/k8s/service.yaml
        images: ${{ env.REGISTRY }}:${{ env.TAG }}
        namespace: ${{ inputs.environment }}-ns
