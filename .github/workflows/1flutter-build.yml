name: Build & Deploy (v4)

on:
  workflow_dispatch:  # 手动触发配置
    inputs:
      environment:
        description: '目标环境 (stage/prod)'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - prod
      confirm-deploy:
        description: '确认部署操作 (true/false)'
        required: true
        default: 'true'
        type: boolean
  push:
    branches:
      - main
    paths:
      - 'flutter/pubspec.yaml'  # 监听 pubspec 文件变更

env:
  REGISTRY_URL: ghcr.io/asdfghj1397/rustdesk2
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'stage' }}  # 动态环境选择
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.19.5  # 根据实际版本调整

    - name: Build Flutter
      run: |
        flutter pub get
        flutter build apk --release  # 或 iOS/web 构建命令

    - name: Docker Build & Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY_URL }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set Kubernetes Context (v4)
      uses: azure/k8s-set-context@v4
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_SECRET }}
        context: ${{ inputs.environment }}-cluster  # 动态上下文名称
        cluster-type: generic
        set-current-context: true
        override: true

    - name: Deploy to Kubernetes
      uses: azure/k8s-deploy@v4
      if: ${{ inputs.confirm-deploy == 'true' }}  # 部署确认开关
      with:
        manifests: |
          k8s/deployment.yaml
          k8s/service.yaml
        images: |
          ${{ env.REGISTRY_URL }}:${{ env.IMAGE_TAG }}
        namespace: ${{ inputs.environment }}-ns
        strategy: canary  # 部署策略选项 (canary/blue-green)

    - name: Verify Deployment
      run: |
        kubectl get pods -n ${{ inputs.environment }}-ns
        kubectl get svc -n ${{ inputs.environment }}-ns
